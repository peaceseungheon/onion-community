plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.onion'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'mysql:mysql-connector-java:8.0.32' // MySQL 드라이버 추가 (필요한 경우)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0' // 최신 버전 사용
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT API
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'   // JWT 구현체
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// querydsl for spring boot 3.x
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation("org.springframework.boot:spring-boot-starter-reactor-netty")

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test' // Spring Security 테스트 의존성 추가
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}

tasks.withType(JavaCompile){
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}
